---
mysql:
  root_password: ''
  current_root_password: ''
  databases:
    test1:
      state: import
      target: test1.sql
    test2:
      state: absent
  users:
    test1:
      password: test1pass
      priv: test1.*:ALL
      state: absent
    test2:
      password: test2pass
      priv: test2.*:ALL
      state: absent
  settings:
    # !!!Note: If you need to add parameter like options (without value, for
    # example, like "skip-networking"), you must create the key equall value:
    # skip-networking = skip-networking

    # InnoDB settings
    innodb_buffer_pool_size: 1024M
    # innodb_buffer_pool_instances is recommended to set 1 instance per 1 Gb of innodb_buffer_pool_size
    innodb_buffer_pool_instances: 1
    innodb_file_per_table: 1
    innodb_file_format: barracuda

    # Query Cache Configuration
    query_cache_limit: 1M
    query_cache_size: 32M
    query_cache_type: 1

    # Buffers configuration
    sort_buffer_size: 16M
    read_buffer_size: 4M
    read_rnd_buffer_size: 4M
    myisam_sort_buffer_size: 4M

    # Other settings

    # key_buffer_size was previously known as key_buffer
    key_buffer_size: 64M
    key_cache_division_limit: 70

    # table_open_cache was previously known as table_cache in MySQL 5.1.2 and earlier.
    table_open_cache: 1024
    thread_concurrency: 8

    max_heap_table_size: 32M
    tmp_table_size: 32M

    skip-networking: skip-networking
    bind-address: 127.0.0.1
    max_allowed_packet: 16M
    thread_stack: 192K
    thread_cache_size: 8
    max_connections: 20
    myisam-recover: DEFAULT
    character-set-server: utf8
  automysqlbackup:
    enabled: no

    # Note that this settings is a bash variables, so if you want
    # to use bash expressions and variables in this settings,
    # you need to double-quote variable value like this: '"$DBNAMES"'

    # Also, note that order of variables appearence is matter!
    # see variables_order parameter.

    settings:
      username: |
        `grep user /etc/mysql/debian.cnf | tail -n 1 | cut -d"=" -f2 | awk '{print $1}'`
      password: |
        `grep password /etc/mysql/debian.cnf | tail -n 1 | cut -d"=" -f2 | awk '{print $1}'`
      dbhost: "localhost"
      dbnames: |
        `mysql --defaults-file=/etc/mysql/debian.cnf --execute="SHOW DATABASES" | awk '{print $1}' | grep -v ^Database$ | grep -v ^mysql$ | grep -v ^performance_schema$ | grep -v ^information_schema$ | tr \\\r\\\n ,\ `
      backupdir: "/var/lib/automysqlbackup"
      mailcontent: "quiet"
      maxattsize: "4000"
      mailaddr: "root@example.com"
      mdbnames: '"$DBNAMES"'
      dbexclude: ""
      create_database: "no"
      sepdir: "yes"
      doweekly: 7
      comp: gzip
      commcomp: "no"
      latest: "yes"
      max_allowed_packet: ""
      socket: ""
      prebackup: ""
      postbackup: ""
      routines: "yes"

    # The variables order is matter, because in automysqlbackup config
    # one variable can use another one, defined earlier.

    variables_order: ['username', 'password', 'dbhost', 'dbnames', 'backupdir', 'mailcontent', 'maxattsize', 'mailaddr', 'mdbnames', 'dbexclude', 'create_database', 'sepdir', 'doweekly', 'comp', 'commcomp', 'latest', 'max_allowed_packet', 'socket', 'prebackup', 'postbackup', 'routines']
